{
  "timestamp": "2025-08-14T12:23:02.362Z",
  "summary": {
    "total": 10,
    "perfectMatches": 1,
    "countMatches": 8,
    "valueMatches": 3,
    "categories": {
      "basic": {
        "total": 1,
        "matches": 0
      },
      "recursive_descent": {
        "total": 2,
        "matches": 0
      },
      "array_access": {
        "total": 1,
        "matches": 0
      },
      "filters": {
        "total": 2,
        "matches": 0
      },
      "property_filters": {
        "total": 2,
        "matches": 1
      },
      "parent_filters": {
        "total": 1,
        "matches": 0
      },
      "array_wildcards": {
        "total": 1,
        "matches": 0
      }
    }
  },
  "results": [
    {
      "testCase": {
        "name": "Authors of all books",
        "jsonpath": "$.store.book[*].author",
        "data": "goessner_spec_data",
        "category": "basic",
        "description": "Basic property access in arrays"
      },
      "goResult": {
        "count": 4,
        "hasValues": true
      },
      "jsResult": {
        "count": 4,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": true,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "All authors",
        "jsonpath": "$..author",
        "data": "goessner_spec_data",
        "category": "recursive_descent",
        "description": "Recursive descent for specific property"
      },
      "goResult": {
        "count": 4,
        "hasValues": true
      },
      "jsResult": {
        "count": 4,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": true,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "All elements beneath root",
        "jsonpath": "$..*",
        "data": "goessner_spec_data",
        "category": "recursive_descent",
        "description": "Complete recursive descent"
      },
      "goResult": {
        "count": 27,
        "hasValues": true
      },
      "jsResult": {
        "count": 27,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "Third book",
        "jsonpath": "$..book[2]",
        "data": "goessner_spec_data",
        "category": "array_access",
        "description": "Array index access with recursive descent"
      },
      "goResult": {
        "count": 1,
        "hasValues": true
      },
      "jsResult": {
        "count": 1,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "Books with ISBN",
        "jsonpath": "$..book[?(@.isbn)]",
        "data": "goessner_spec_data",
        "category": "filters",
        "description": "Filter by property existence"
      },
      "goResult": {
        "count": 2,
        "hasValues": true
      },
      "jsResult": {
        "count": 2,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "Books cheaper than 10",
        "jsonpath": "$..book[?(@.price<10)]",
        "data": "goessner_spec_data",
        "category": "filters",
        "description": "Numeric comparison filter"
      },
      "goResult": {
        "count": 2,
        "hasValues": true
      },
      "jsResult": {
        "count": 2,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "Price properties not equal to 8.95",
        "jsonpath": "$..*[?(@property === 'price' && @ !== 8.95)]",
        "data": "goessner_spec_data",
        "category": "property_filters",
        "description": "Property name filter with value condition"
      },
      "goResult": {
        "count": 4,
        "hasValues": true
      },
      "jsResult": {
        "count": 4,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": true,
        "pathsMatch": true,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": true
      }
    },
    {
      "testCase": {
        "name": "Books not at index 0",
        "jsonpath": "$..book[?(@property !== 0)]",
        "data": "goessner_spec_data",
        "category": "property_filters",
        "description": "Array index filter"
      },
      "goResult": {
        "count": 4,
        "hasValues": true
      },
      "jsResult": {
        "count": 3,
        "hasValues": true
      },
      "comparison": {
        "countMatch": false,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "Parent filter - simple",
        "jsonpath": "$.store.book[?(@parent.bicycle)]",
        "data": "goessner_spec_data",
        "category": "parent_filters",
        "description": "Parent object property existence"
      },
      "goResult": {
        "count": 4,
        "hasValues": true
      },
      "jsResult": {
        "count": 4,
        "hasValues": true
      },
      "comparison": {
        "countMatch": true,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": false,
        "errorMatch": true,
        "perfectMatch": false
      }
    },
    {
      "testCase": {
        "name": "Orders with laptop products",
        "jsonpath": "$.orders[?(@.items[*].product === 'laptop')]",
        "data": "orders_data",
        "category": "array_wildcards",
        "description": "Array wildcard in filter expressions"
      },
      "goResult": {
        "count": 1,
        "hasValues": true
      },
      "jsResult": {
        "count": 0,
        "error": "Unexpected \"*\" at character 11",
        "hasValues": false
      },
      "comparison": {
        "countMatch": false,
        "valuesMatch": false,
        "pathsMatch": false,
        "goError": false,
        "jsError": true,
        "errorMatch": false,
        "perfectMatch": false
      }
    }
  ]
}