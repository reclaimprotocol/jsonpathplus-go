package main

import (
	"fmt"
	
	jp "github.com/reclaimprotocol/jsonpathplus-go"
)

func main() {
	data := `{"users":{"1":{"name":"Alice"},"2":{"name":"Bob"}}}`
	
	// Get paths generated by Go
	fmt.Println("Go path formats:")
	results, _ := jp.Query("$.users[*]", data)
	for _, r := range results {
		fmt.Printf("Value: %v, Path: %s\n", r.Value, r.Path)
	}
	
	// Test different path filter patterns
	fmt.Println("\nTesting path filters:")
	queries := []string{
		`$.users[?(@path === "$.users.1")]`,          // Dot notation
		`$.users[?(@path === "$['users']['1']")]`,    // Bracket with quoted number  
		`$.users[?(@path === "$['users'][1]")]`,      // Bracket with unquoted number
	}
	
	for _, query := range queries {
		fmt.Printf("Query: %s\n", query)
		results, err := jp.Query(query, data)
		if err != nil {
			fmt.Printf("Error: %v\n", err)
		} else {
			fmt.Printf("Count: %d\n", len(results))
		}
		fmt.Println()
	}
}