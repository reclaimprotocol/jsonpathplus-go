DEBUG: Filter '@property === 'price' && @ !== 8.95' on property 'store' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property 'book' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property 'bicycle' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '0' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '0' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '0' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '0' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '1' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '1' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '1' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '1' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '2' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '2' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '2' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '2' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '2' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '3' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '3' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '3' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '3' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property '3' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property 'color' = false
DEBUG: Filter '@property === 'price' && @ !== 8.95' on property 'price' = true
DEBUG: Filter '@property !== "category"' on property '0' = true
DEBUG: Filter '@property !== "category"' on property '0' = true
DEBUG: Filter '@property !== "category"' on property '0' = true
DEBUG: Filter '@property !== "category"' on property '0' = true
DEBUG: Filter '@property !== "category"' on property '1' = true
DEBUG: Filter '@property !== "category"' on property '1' = true
DEBUG: Filter '@property !== "category"' on property '1' = true
DEBUG: Filter '@property !== "category"' on property '1' = true
DEBUG: Filter '@property !== "category"' on property '2' = true
DEBUG: Filter '@property !== "category"' on property '2' = true
DEBUG: Filter '@property !== "category"' on property '2' = true
DEBUG: Filter '@property !== "category"' on property '2' = true
DEBUG: Filter '@property !== "category"' on property '2' = true
DEBUG: Filter '@property !== "category"' on property '3' = true
DEBUG: Filter '@property !== "category"' on property '3' = true
DEBUG: Filter '@property !== "category"' on property '3' = true
DEBUG: Filter '@property !== "category"' on property '3' = true
DEBUG: Filter '@property !== "category"' on property '3' = true
DEBUG: Filter '@property !== 0' on property 'book' = true
DEBUG: Filter '@property !== 0' on property 'book' = true
DEBUG: Filter '@property !== 0' on property 'book' = true
DEBUG: Filter '@property !== 0' on property 'book' = true
--- FAIL: TestGoessnerSpecification (0.00s)
    --- FAIL: TestGoessnerSpecification/All_elements_beneath_root (0.00s)
        goessner_spec_test.go:251: All members of JSON structure beneath root: Expected 27 results, got 23
        goessner_spec_test.go:252: XPath: $..*
        goessner_spec_test.go:253: JSONPath: $..*
        goessner_spec_test.go:255: Result 0: map[bicycle:map[color:red price:19.95] book:[map[author:Nigel Rees category:reference price:8.95 title:Sayings of the Century] map[author:Evelyn Waugh category:fiction price:12.99 title:Sword of Honour] map[author:Herman Melville category:fiction isbn:0-553-21311-3 price:8.99 title:Moby Dick] map[author:J. R. R. Tolkien category:fiction isbn:0-395-19395-8 price:22.99 title:The Lord of the Rings]]]
        goessner_spec_test.go:255: Result 1: [map[author:Nigel Rees category:reference price:8.95 title:Sayings of the Century] map[author:Evelyn Waugh category:fiction price:12.99 title:Sword of Honour] map[author:Herman Melville category:fiction isbn:0-553-21311-3 price:8.99 title:Moby Dick] map[author:J. R. R. Tolkien category:fiction isbn:0-395-19395-8 price:22.99 title:The Lord of the Rings]]
        goessner_spec_test.go:255: Result 2: map[color:red price:19.95]
        goessner_spec_test.go:255: Result 3: reference
        goessner_spec_test.go:255: Result 4: Nigel Rees
        goessner_spec_test.go:255: Result 5: Sayings of the Century
        goessner_spec_test.go:255: Result 6: 8.95
        goessner_spec_test.go:255: Result 7: fiction
        goessner_spec_test.go:255: Result 8: Evelyn Waugh
        goessner_spec_test.go:255: Result 9: Sword of Honour
        goessner_spec_test.go:255: Result 10: 12.99
        goessner_spec_test.go:255: Result 11: fiction
        goessner_spec_test.go:255: Result 12: Herman Melville
        goessner_spec_test.go:255: Result 13: Moby Dick
        goessner_spec_test.go:255: Result 14: 0-553-21311-3
        goessner_spec_test.go:255: Result 15: 8.99
        goessner_spec_test.go:255: Result 16: fiction
        goessner_spec_test.go:255: Result 17: J. R. R. Tolkien
        goessner_spec_test.go:255: Result 18: The Lord of the Rings
        goessner_spec_test.go:255: Result 19: 0-395-19395-8
        goessner_spec_test.go:255: Result 20: 22.99
        goessner_spec_test.go:255: Result 21: red
        goessner_spec_test.go:255: Result 22: 19.95
    --- FAIL: TestGoessnerSpecification/Price_properties_not_equal_to_8.95 (0.00s)
        goessner_spec_test.go:251: All price property values not equal to 8.95: Expected 4 results, got 1
        goessner_spec_test.go:252: XPath: //*[name() = 'price' and . != 8.95]
        goessner_spec_test.go:253: JSONPath: $..*[?(@property === 'price' && @ !== 8.95)]
        goessner_spec_test.go:255: Result 0: 19.95
    --- FAIL: TestGoessnerSpecification/Book_children_except_category (0.00s)
        goessner_spec_test.go:251: All children of books except category: Expected 14 results, got 18
        goessner_spec_test.go:252: XPath: //book/*[name() != 'category']
        goessner_spec_test.go:253: JSONPath: $..book.*[?(@property !== "category")]
        goessner_spec_test.go:255: Result 0: Nigel Rees
        goessner_spec_test.go:255: Result 1: Sayings of the Century
        goessner_spec_test.go:255: Result 2: 8.95
        goessner_spec_test.go:255: Result 3: reference
        goessner_spec_test.go:255: Result 4: fiction
        goessner_spec_test.go:255: Result 5: Evelyn Waugh
        goessner_spec_test.go:255: Result 6: Sword of Honour
        goessner_spec_test.go:255: Result 7: 12.99
        goessner_spec_test.go:255: Result 8: fiction
        goessner_spec_test.go:255: Result 9: Herman Melville
        goessner_spec_test.go:255: Result 10: Moby Dick
        goessner_spec_test.go:255: Result 11: 0-553-21311-3
        goessner_spec_test.go:255: Result 12: 8.99
        goessner_spec_test.go:255: Result 13: fiction
        goessner_spec_test.go:255: Result 14: J. R. R. Tolkien
        goessner_spec_test.go:255: Result 15: The Lord of the Rings
        goessner_spec_test.go:255: Result 16: 0-395-19395-8
        goessner_spec_test.go:255: Result 17: 22.99
    --- FAIL: TestGoessnerSpecification/Books_not_at_index_0 (0.00s)
        goessner_spec_test.go:251: All books except the first one: Expected 3 results, got 4
        goessner_spec_test.go:252: XPath: //book[position() != 1]
        goessner_spec_test.go:253: JSONPath: $..book[?(@property !== 0)]
        goessner_spec_test.go:255: Result 0: map[author:Nigel Rees category:reference price:8.95 title:Sayings of the Century]
        goessner_spec_test.go:255: Result 1: map[author:Evelyn Waugh category:fiction price:12.99 title:Sword of Honour]
        goessner_spec_test.go:255: Result 2: map[author:Herman Melville category:fiction isbn:0-553-21311-3 price:8.99 title:Moby Dick]
        goessner_spec_test.go:255: Result 3: map[author:J. R. R. Tolkien category:fiction isbn:0-395-19395-8 price:22.99 title:The Lord of the Rings]
    --- FAIL: TestGoessnerSpecification/Store_grandchildren_where_parent_is_not_book (0.00s)
        goessner_spec_test.go:251: Grandchildren of store where parent property is not 'book': Expected 2 results, got 1
        goessner_spec_test.go:252: XPath: /store/*/*[name(parent::*) != 'book']
        goessner_spec_test.go:253: JSONPath: $.store.*[?(@parentProperty !== "book")]
        goessner_spec_test.go:255: Result 0: map[color:red price:19.95]
    --- FAIL: TestGoessnerSpecification/Book_properties_where_parent_index_is_not_0 (0.00s)
        goessner_spec_test.go:251: Properties of books where parent index is not 0: Expected 12 results, got 14
        goessner_spec_test.go:252: XPath: //book[count(preceding-sibling::*) != 0]/*/text()
        goessner_spec_test.go:253: JSONPath: $..book.*[?(@parentProperty !== 0)]
        goessner_spec_test.go:255: Result 0: fiction
        goessner_spec_test.go:255: Result 1: Evelyn Waugh
        goessner_spec_test.go:255: Result 2: Sword of Honour
        goessner_spec_test.go:255: Result 3: 12.99
        goessner_spec_test.go:255: Result 4: fiction
        goessner_spec_test.go:255: Result 5: Herman Melville
        goessner_spec_test.go:255: Result 6: Moby Dick
        goessner_spec_test.go:255: Result 7: 0-553-21311-3
        goessner_spec_test.go:255: Result 8: 8.99
        goessner_spec_test.go:255: Result 9: The Lord of the Rings
        goessner_spec_test.go:255: Result 10: 0-395-19395-8
        goessner_spec_test.go:255: Result 11: 22.99
        goessner_spec_test.go:255: Result 12: fiction
        goessner_spec_test.go:255: Result 13: J. R. R. Tolkien
DEBUG: Filter '@property === 'engineering'' on property 'engineering' = true
DEBUG: Filter '@property === 'engineering'' on property 'sales' = false
DEBUG: Filter '@property !== 'metadata'' on property 'departments' = true
DEBUG: Filter '@property !== 'metadata'' on property 'metadata' = false
DEBUG: Filter '@property === 'engineering'' on property 'sales' = false
DEBUG: Filter '@property === 'engineering'' on property 'engineering' = true
--- FAIL: TestJSONPathPlusFeatures (0.00s)
    --- FAIL: TestJSONPathPlusFeatures/Filter_departments_by_parent_property (0.00s)
        jsonpath_plus_features_test.go:146: Find items where parent property is 'departments': Expected 2 results, got 0
        jsonpath_plus_features_test.go:147: JSONPath: $.company.departments.*[?(@parentProperty === 'departments')]
DEBUG: Filter '@property === 'engineering'' on property 'engineering' = true
DEBUG: Filter '@property === 'engineering'' on property 'sales' = false
FAIL
FAIL	github.com/reclaimprotocol/jsonpathplus-go/compatibility_tests	0.368s
FAIL
